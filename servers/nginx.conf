
# user  nobody;
worker_processes  2;

error_log  ./servers/logs/nginx-error.log;

#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  2048;
}

http {
    # include       /etc/nginx/mime.types; # linux
    include       /opt/homebrew/etc/nginx/mime.types; # mac
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  120;

    #gzip  on;

    map $http_upgrade $connection_upgrade {
            default upgrade;
            ''      close;
        }

    server {
        listen       80;
        # server_name  g4tp.com; # linux
        server_name localhost; # mac
        root web;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            index  index.html index.htm;
        }
        
        location /admin {
            auth_basic "Admin";
                auth_basic_user_file nginx.pwfile; 
        }
            location /big {
                auth_basic "Big Display";
                auth_basic_user_file nginx.pwfile;     
            }
        location /mqtt {
                proxy_pass http://localhost:9001;
            proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
        }
        location /ws {
            proxy_pass http://localhost:8091;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

	# listen 443 ssl; # managed by Certbot
	# RSA certificate
	# ssl_certificate /etc/letsencrypt/live/g4tp.com/fullchain.pem; # managed by Certbot
	# ssl_certificate_key /etc/letsencrypt/live/g4tp.com/privkey.pem; # managed by Certbot
	# include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #    # Redirect non-https traffic to https
    #    if ($scheme != "https") {
    #      return 301 https://$host$request_uri;
    #    } # managed by Certbot

    }

    include servers/*;
}
